{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Nicol\\xE1s\\\\Web del negro\\\\bicis-negro\\\\client\\\\src\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport React, { Component, useState, useMemo } from 'react';\nimport { HashRouter as Router, Routes, Route, Outlet } from \"react-router-dom\";\nimport './styles.css';\nimport { UpperBar } from './components/UpperBar.js';\nimport { Home } from './components/Home.js';\nimport { Products } from './components/Products.js';\nimport { PageNotFound } from './components/PageNotFound.js';\nimport { TotalAmountContext } from './elements/cartContent.js';\nimport { CartContentContext } from './elements/cartContent.js';\nimport { Cart } from './components/Cart.js';\nimport { newCartContent } from './elements/handcraftsList.js';\nimport { listaDeRutas } from './components/Rutas.js';\nimport { Ejecutar } from './components/Ejecutar.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Main extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: null\n    };\n\n    this.callBackendAPI = async () => {\n      const response = await fetch('/express_backend');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n  }\n\n  componentDidMount() {\n    this.callBackendAPI().then(res => this.setState({\n      data: res.express\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [document.title = 'Bici Negro', /*#__PURE__*/_jsxDEV(Router, {\n        baseline: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(UpperBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Routes, {\n            children: /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 54\n              }, this),\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                index: true,\n                element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 55\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 33\n              }, this), listaDeRutas.map(ruta => /*#__PURE__*/_jsxDEV(Route, {\n                path: process.env.REACT_APP_FOR_PATH + ruta[0],\n                element: /*#__PURE__*/_jsxDEV(Products, {\n                  text: ruta[1],\n                  route: ruta[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 41\n              }, this)), /*#__PURE__*/_jsxDEV(Route, {\n                path: process.env.REACT_APP_FOR_PATH + '/carrito',\n                element: /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 100\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: process.env.REACT_APP_FOR_PATH + '/ejecutar',\n                element: /*#__PURE__*/_jsxDEV(Ejecutar, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 101\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: process.env.REACT_APP_FOR_PATH + '*',\n                element: /*#__PURE__*/_jsxDEV(PageNotFound, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 93\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport const MainComponent = () => {\n  _s();\n\n  const checkCart = () => {\n    const previouslyExistentCart = Number(sessionStorage.getItem('cart-amount'));\n    return typeof previouslyExistentCart != 'undefined' && previouslyExistentCart;\n  };\n\n  const [carterTotalAmount, setTotalAmount] = useState(checkCart);\n  const utilitiesSet = useMemo(() => ({\n    carterTotalAmount,\n    setTotalAmount\n  }), [carterTotalAmount]);\n  const [cartContent, setCartContent] = useState(newCartContent);\n  const setForContentChanging = useMemo(() => ({\n    cartContent,\n    setCartContent\n  }), [cartContent]);\n  return /*#__PURE__*/_jsxDEV(TotalAmountContext.Provider, {\n    value: utilitiesSet,\n    children: /*#__PURE__*/_jsxDEV(CartContentContext.Provider, {\n      value: setForContentChanging,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Main, {}, 98797686, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MainComponent, \"NZT1bcb98aAobVgzCp2lU3yRARo=\");\n\n_c = MainComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainComponent\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Nicol√°s/Web del negro/bicis-negro/client/src/Main.js"],"names":["React","Component","useState","useMemo","HashRouter","Router","Routes","Route","Outlet","UpperBar","Home","Products","PageNotFound","TotalAmountContext","CartContentContext","Cart","newCartContent","listaDeRutas","Ejecutar","Main","state","data","callBackendAPI","response","fetch","body","json","status","Error","message","componentDidMount","then","res","setState","express","catch","err","console","log","render","document","title","map","ruta","process","env","REACT_APP_FOR_PATH","MainComponent","checkCart","previouslyExistentCart","Number","sessionStorage","getItem","carterTotalAmount","setTotalAmount","utilitiesSet","cartContent","setCartContent","setForContentChanging"],"mappings":"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","sourcesContent":["import 'bootstrap/dist/css/bootstrap.css';\r\nimport React, { Component, useState, useMemo } from 'react';\r\nimport {\r\n    HashRouter as Router,\r\n    Routes,\r\n    Route,\r\n    Outlet\r\n} from \"react-router-dom\";\r\nimport './styles.css';\r\nimport { UpperBar } from './components/UpperBar.js';\r\nimport { Home } from './components/Home.js';\r\nimport { Products } from './components/Products.js';\r\nimport { PageNotFound } from './components/PageNotFound.js';\r\nimport { TotalAmountContext } from './elements/cartContent.js';\r\nimport { CartContentContext } from './elements/cartContent.js';\r\nimport { Cart } from './components/Cart.js';\r\nimport { newCartContent } from './elements/handcraftsList.js';\r\nimport { listaDeRutas } from './components/Rutas.js';\r\nimport { Ejecutar } from './components/Ejecutar.js';\r\n\r\nclass Main extends Component {\r\n    state = {\r\n        data: null\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.callBackendAPI()\r\n            .then(res => this.setState({ data: res.express }))\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    callBackendAPI = async () => {\r\n        const response = await fetch('/express_backend');\r\n        const body = await response.json();\r\n        if (response.status !== 200) {\r\n            throw Error(body.message)\r\n        }\r\n        return body;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {document.title = 'Bici Negro'}\r\n                <Router baseline='/'>\r\n                    <div>\r\n                        <UpperBar />\r\n                        <Routes>\r\n                            <Route path='/' element={<Outlet />}>\r\n                                <Route index element={<Home />}></Route>\r\n                                {\r\n                                    listaDeRutas.map((ruta) => (\r\n                                        <Route path={process.env.REACT_APP_FOR_PATH + ruta[0]} element={\r\n                                            <Products\r\n                                                text={ruta[1]}\r\n                                                route={ruta[0]}\r\n                                            />\r\n                                        }></Route>\r\n                                    ))\r\n                                }\r\n                                <Route path={process.env.REACT_APP_FOR_PATH + '/carrito'} element={<Cart />}></Route>\r\n                                <Route path={process.env.REACT_APP_FOR_PATH + '/ejecutar'} element={<Ejecutar />}></Route>\r\n                                <Route path={process.env.REACT_APP_FOR_PATH + '*'} element={<PageNotFound />}></Route>\r\n                            </Route>\r\n                        </Routes>\r\n                    </div>\r\n                </Router >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport const MainComponent = () => {\r\n    const checkCart = () => {\r\n        const previouslyExistentCart = Number(sessionStorage.getItem('cart-amount'));\r\n        return typeof previouslyExistentCart != 'undefined' && previouslyExistentCart;\r\n    }\r\n    const [carterTotalAmount, setTotalAmount] = useState(checkCart);\r\n    const utilitiesSet = useMemo(\r\n        () => ({ carterTotalAmount, setTotalAmount }),\r\n        [carterTotalAmount]\r\n    );\r\n    const [cartContent, setCartContent] = useState(newCartContent);\r\n    const setForContentChanging = useMemo(\r\n        () => ({ cartContent, setCartContent }),\r\n        [cartContent]\r\n    );\r\n    return (\r\n        <TotalAmountContext.Provider\r\n            value={utilitiesSet}>\r\n            <CartContentContext.Provider\r\n                value={setForContentChanging}>\r\n                <div>\r\n                    <Main \r\n                    key={98797686}/>\r\n                </div>\r\n            </CartContentContext.Provider>\r\n        </TotalAmountContext.Provider>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}